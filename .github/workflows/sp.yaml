name: SPlayer PNPM 构建流程

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: '发布名称（留空自动生成）'
        required: false
        type: string

env:
  PROJECT_DIR: SPlayer

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # ========== 1. 克隆仓库 ==========
    - name: 克隆代码库
      uses: actions/checkout@v4
      with:
        repository: IamFurina/SPlayer
        ref: master-fix
        path: ${{ env.PROJECT_DIR }}

    # ========== 2. 配置Node环境 ==========
    - name: 安装最新Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 'latest'

    # ========== 3. 安装PNPM ==========
    - name: 安装并配置pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
        run_install: false  # 禁用自动安装依赖

    # ========== 4. 验证环境 ==========
    - name: 显示环境信息
      run: |
        echo "PATH: $PATH"
        echo "PNPM路径: $(which pnpm)"
        echo "PNPM版本: $(pnpm -v)"
      shell: bash

    # ========== 5. 安装依赖 ==========
    - name: 安装项目依赖
      working-directory: ${{ env.PROJECT_DIR }}
      run: |
        # 清理旧依赖
        rm -rf node_modules

        # 安装依赖
        pnpm install --frozen-lockfile


    # ========== 5. 构建项目 ==========
    - name: 执行构建
      working-directory: ${{ env.PROJECT_DIR }}
      run: |
        # 带清理的构建
        pnpm build
        
        # 严格验证产物
        [ -d out/renderer ] || (echo "构建失败：缺少输出目录"; exit 1)
        [ -f out/renderer/index.html ] || (echo "错误：缺失入口文件"; exit 1)

    # ========== 6. 发布准备 ==========
    - name: 创建发布包
      working-directory: ${{ env.PROJECT_DIR }}
      run: |
        # 生成智能文件名
        if [ -z "${{ inputs.release_name }}" ]; then
          RELEASE_NAME="Build-$(date +%Y%m%d-%H%M%S)"
        else
          RELEASE_NAME="${{ inputs.release_name }}"
        fi

        # 创建版本化目录结构
        mkdir -p release/${RELEASE_NAME}
        cp -r out/renderer/* release/${RELEASE_NAME}
        
        # 生成压缩包（保留目录结构）
        tar -czvf release/${RELEASE_NAME}.tar.gz -C release ${RELEASE_NAME}
        
        echo "打包结果："
        ls -lh release/

    # ========== 7. 发布版本 ==========
    - name: 创建GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ inputs.release_name || '自动构建' }}
        tag_name: build-${{ github.run_number }}
        body: |
          ## 构建详情
          - 时间：${{ github.run_started_at }}
          - 环境：
            - Node: $(node -v)
            - PNPM: $(pnpm -v)
          - 提交：[${{
            github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
        files: |
          ${{ env.PROJECT_DIR }}/release/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
